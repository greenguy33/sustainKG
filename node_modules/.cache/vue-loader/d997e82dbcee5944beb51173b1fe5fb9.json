{"remainingRequest":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/songqingyu/Documents/GitHub/sustainKG/src/components/home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/src/components/home.vue","mtime":1626703492685},{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2dyYXBoIHsKICAgIHdpZHRoOiAxMDB2dzsKICAgIGhlaWdodDogMTAwdmg7Cn0KCi5kMy1jb250ZXh0LW1lbnUgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgZGlzcGxheTogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7CiAgICBib3JkZXItcmFkaXVzOiA0cHg7CgogICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOwogICAgZm9udC1zaXplOiAxNHB4OwogICAgbWluLXdpZHRoOiAxNTBweDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkNGQ0ZDQ7CgogICAgei1pbmRleDoxMjAwOwp9CgouZDMtY29udGV4dC1tZW51IHVsIHsKICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICAgIG1hcmdpbjogNHB4IDBweDsKICAgIHBhZGRpbmc6IDBweDsKICAgIGN1cnNvcjogZGVmYXVsdDsKfQoKLmQzLWNvbnRleHQtbWVudSB1bCBsaSB7CiAgICBwYWRkaW5nOiA0cHggMTZweDsKfQoKLmQzLWNvbnRleHQtbWVudSB1bCBsaTpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDY3N2Y4OwogICAgY29sb3I6ICNmZWZlZmU7Cn0KCgo="},{"version":3,"sources":["home.vue"],"names":[],"mappingssuCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"home.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n\n\n\n\n    <div id=\"app\">\n        <el-container>\n\n\n            <el-row class=\"tac\">\n                <el-col >\n                    <h5>SustainKG</h5>\n                    <el-menu\n                            default-active=\"2\"\n                            class=\"el-menu-vertical-demo\"\n\n                    >\n                        <el-submenu index=\"1\">\n                            <template slot=\"title\">\n                                <i class=\"el-icon-location\"></i>\n                                <span>Operation</span>\n                            </template>\n                            <el-menu-item-group>\n                                <!--<template slot=\"title\">分组一</template>-->\n                                <el-menu-item index=\"1-1\" @click=\"submitData()\">Submit Data</el-menu-item>\n                                <el-menu-item index=\"1-2\">Upload Data</el-menu-item>\n                                <el-menu-item index=\"1-3\" @click=\"reload()\">Reload Data</el-menu-item>\n                            </el-menu-item-group>\n\n\n                        </el-submenu>\n                        <el-menu-item >\n                            <i class=\"el-icon-menu\"></i>\n                            <span slot=\"title\">Node Number：{{ info.nodes.length }}</span>\n                        </el-menu-item>\n                        <el-menu-item >\n                            <i class=\"el-icon-setting\"></i>\n                            <span slot=\"title\">Link Number：{{ info.links.length }}</span>\n                        </el-menu-item>\n                    </el-menu>\n                </el-col>\n                <router-view></router-view>\n\n            </el-row>\n\n            <el-dialog :visible.sync=\"dialogFormVisible\">\n                Node Name\n                <el-select\n                        label-position=\"right\"\n                        label-width=\"86px\"\n                        style=\"width: 300px; margin-left:50px;\"\n\n                        v-model=\"node_value\"\n                        placeholder=\"请选择\"\n                        clearable\n                        filterable\n                        @blur=\"selectBlur\"\n                        @clear=\"selectClear\"\n                        @change=\"selectChange\"\n                ><el-option\n                        v-for=\"(item,index) in node_list\"\n                        :key=\"index\"\n                        :label=\"item.label\"\n                        :value=\"item.value\" ></el-option>\n                </el-select>\n                <div slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"cancel\">\n                        No\n                    </el-button>\n                    <el-button type=\"primary\" :disabled=\"btnChangeEnable\" @click=\"addNodes\">\n                        Yes\n                    </el-button>\n                </div>\n            </el-dialog>\n\n\n            <el-dialog :visible.sync=\"dialogFormVisible_change_node_name\">\n                Change Node Name\n                <el-select\n                        label-position=\"right\"\n                        label-width=\"86px\"\n                        style=\"width: 300px; margin-left:30px;\"\n\n                        v-model=\"new_node_name\"\n                        placeholder=\"请选择\"\n                        clearable\n                        filterable\n                        @blur=\"selectBlur\"\n                        @clear=\"selectClear\"\n                        @change=\"selectChange\"\n                ><el-option\n                        v-for=\"(item,index) in node_list\"\n                        :key=\"index\"\n                        :label=\"item.label\"\n                        :value=\"item.value\" ></el-option>\n                </el-select>\n                <div slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"cancel\">\n                        No\n                    </el-button>\n                    <el-button type=\"primary\" :disabled=\"btnChangeEnable\" @click=\"change_node_name\">\n                        Yes\n                    </el-button>\n                </div>\n            </el-dialog>\n\n\n\n            <el-dialog :visible.sync=\"dialogFormVisible_link\">\n                Link Name\n\n                <el-select\n                        label-position=\"right\"\n                        label-width=\"86px\"\n                        style=\"width: 300px; margin-left:50px;\"\n\n                        v-model=\"link_value\"\n                        placeholder=\"请选择\"\n                        clearable\n                        filterable\n                        @blur=\"selectBlur\"\n                        @clear=\"selectClear\"\n                        @change=\"selectChange\"\n                ><el-option\n                        v-for=\"(item,index) in link_list\"\n                        :key=\"index\"\n                        :label=\"item.label\"\n                        :value=\"item.value\" ></el-option>\n                </el-select>\n\n\n                <div slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"cancel\">\n                        No\n                    </el-button>\n                    <el-button type=\"primary\" :disabled=\"btnChangeEnable\"  @click=\"addLinks\">\n                        Yes\n                    </el-button>\n                </div>\n            </el-dialog>\n\n            <el-dialog :visible.sync=\"dialogFormVisible_change_link_name\">\n                Change Link Name\n                <el-select\n                        label-position=\"right\"\n                        label-width=\"86px\"\n                        style=\"width: 300px; margin-left:30px;\"\n\n                        v-model=\"new_link_name\"\n                        placeholder=\"请选择\"\n                        clearable\n                        filterable\n                        @blur=\"selectBlur\"\n                        @clear=\"selectClear\"\n                        @change=\"selectChange\"\n                ><el-option\n                        v-for=\"(item,index) in link_list\"\n                        :key=\"index\"\n                        :label=\"item.label\"\n                        :value=\"item.value\" ></el-option>\n                </el-select>\n                <div slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"cancel\">\n                        No\n                    </el-button>\n                    <el-button type=\"primary\" :disabled=\"btnChangeEnable\" @click=\"change_link_name\">\n                        Yes\n                    </el-button>\n                </div>\n            </el-dialog>\n\n\n            <el-main id=\"graph\">\n                <!--<div id=\"graph\"></div>-->\n            </el-main>\n\n\n\n\n        </el-container>\n\n\n\n\n    </div>\n\n</template>\n\n<script>\n    import * as d3 from \"d3\";\n\n    import $ from 'jquery'\n    import {\n        getNodeSelfPath,\n        setLinkGroup,\n        getNodesLine,} from '../utils/deviceRelation'\n\n\n\n\n    export default {\n\n\n        data(){\n\n\n\n            let info = {\n                \"links\": [\n                    {\n                        \"source\" : 0,\n                        \"target\" : 1,\n                        \"type\" : \"link\",\n                        'label': 'Link TEST',\n                        \"properties\":{}\n\n                    },\n\n                ],\n                \"nodes\": [\n                    {\n                        \"id\": 0,\n                        \"type\" : \"node\",\n                        // \"factoryCode\" : \"hello\",\n                        \"label\" : \"Device\",\n                        \"properties\":{\"name\":\"hello\"}\n                        // \"linkId\": 1\n                    },\n                    {\n                        \"id\": 1,\n                        \"type\" : \"node\",\n                        // \"factoryCode\": \"Will\",\n                        \"label\": \"Device\",\n                        \"properties\":{\"name\":\"will\"}\n                        // \"linkId\": 0\n                    },\n                    {\n                        \"id\": 2,\n                        \"type\" : \"node\",\n                        // \"factoryCode\": \"lala\",\n                        \"label\": \"Device\",\n                        \"properties\":{\"name\":\"lala\"}\n                        // \"linkId\": 1\n                    },\n\n                ]\n            };\n\n\n\n            return {\n                node_value: '',\n                link_value:'',\n                btnChangeEnable: true,\n                node_list: [\n                    {\n                        value: 'node1',\n                        label: 'node1'\n                    }, {\n                        value: 'node2',\n                        label: 'node2'\n                    }\n                ],\n\n                link_list: [\n                    {\n                        value: 'link1',\n                        label: 'link1'\n                    }, {\n                        value: 'link2',\n                        label: 'link2'\n                    }\n                ],\n\n                info: info,\n                ifClicked:false,\n\n                selected_Node: '',\n\n                dialogFormVisible:false,\n                dialogFormVisible_link:false,\n                dialogFormVisible_change_node_name:false,\n                dialogFormVisible_change_link_name:false,\n                temp : [],\n                clickTimeId : 0,\n\n                node_id: '',\n                link_id: '',\n                new_link_name:'',\n                new_node_name:'',\n\n                menu: [\n                    {\n                        title: 'Delete Nodes',\n                        action: (node,select_node) => {\n\n                            this.$confirm(\"Delete this node?\", \"Tips\", {\n                                confirmButtonText: \"Yes\",\n                                cancelButtonText: \"No\",\n                                type: \"warning\",\n                            }).then(() => {\n                                this.$message(\n\n                                    {\n                                        type: 'success',\n                                        message: 'The node is deleted!'\n                                    });\n                                console.log('test !!!',select_node)\n                                info.nodes.splice(select_node.index,1);\n                                for(let i =info.links.length-1; i>=0; i-- )\n                                {\n                                    console.log('link index',i,node);\n                                    if(info.links[i].source === select_node\n                                        || info.links[i].target === select_node)\n                                    {\n                                        info.links.splice(i,1);\n                                    }\n\n                                }\n\n                                console.log('after delete', info)\n                                this.renderGraph(this.info);\n\n                            }).catch(() => {\n                                this.$message({\n                                    type: 'info',\n                                    message: 'Cancel Delete!'\n                                })\n\n                            });\n\n                        },\n\n\n                    },\n                    {\n                        title: 'Change Node Name',\n                        action:(node_id)=>{\n                            this.dialogFormVisible_change_node_name = true;\n                            this.node_id = node_id;\n\n                        },\n\n                    },\n\n                ],\n\n                menu_edge:[\n                    {\n                        title: 'Delete Links',\n                        action: (link,selected_link) => {\n                            console.log('ll',link,selected_link);\n                            this.$confirm(\"Delete this link?\", \"Tips\", {\n                                confirmButtonText: \"Yes\",\n                                cancelButtonText: \"No\",\n                                type: \"warning\",\n                            }).then(() => {\n                                this.$message(\n\n                                    {\n                                        type: 'success',\n                                        message: 'The link is deleted!'\n                                    });\n                                info.links.splice(link,1);\n                                this.renderGraph(this.info);\n\n                            }).catch(() => {\n                                this.$message({\n                                    type: 'info',\n                                    message: 'Cancel Delete!'\n                                })\n\n                            });\n\n                        },\n\n                    },\n                    {\n                        title: 'Change link Name',\n                        action:(link_id)=>\n                        {\n                            this.dialogFormVisible_change_link_name = true;\n                            this.link_id = link_id;\n\n                        }\n\n                    }\n                ],\n\n\n\n            }\n        },\n\n        mounted() {\n\n            this.renderGraph(this.info);\n\n        },\n\n        methods: {\n\n\n            selectBlur(e) {\n                // 意见类型\n                this.btnChangeEnable = true;\n                if (e.target.value !== '') {\n\n                    console.log('No selection',e.target.value);\n                    this.$forceUpdate()   // 强制更新\n                }\n                this.selectClear()\n            },\n\n            selectClear() {\n                this.node_value = '';\n                this.link_value = '';\n                this.new_node_name = '';\n                this.new_link_name = '';\n                this.$forceUpdate()\n            },\n\n            selectChange(val) {\n                if(val !== '')\n                {\n                    this.btnChangeEnable = false\n                }\n                if(this.dialogFormVisible_link===true){\n                    this.link_value = val\n                }\n                else if (this.dialogFormVisible_change_link_name === true){\n                    this.new_link_name = val\n                }\n                else if (this.dialogFormVisible_change_node_name === true){\n                    this.new_node_name = val\n                }\n                else if(this.dialogFormVisible === true){\n                    this.node_value = val;\n                }\n                this.$forceUpdate()\n            },\n\n\n            cancel()\n            {\n                this.dialogFormVisible = false;\n                this.dialogFormVisible_link = false;\n                this.dialogFormVisible_change_node_name = false;\n                this.dialogFormVisible_change_link_name = false;\n                this.selectClear();\n                this.temp.length = 0;\n                this.btnChangeEnable = true;\n            },\n\n            addNodes(){\n                this.dialogFormVisible = false;\n                this.doubleClick(this.info, this.info.nodes, this.node_value);\n                this.selectClear()\n                this.btnChangeEnable = true;\n\n            },\n\n            change_node_name(){\n\n                this.info.nodes[this.node_id].properties.name = this.new_node_name;\n                this.dialogFormVisible_change_node_name = false;\n                this.selectClear();\n                this.btnChangeEnable = true;\n                this.renderGraph(this.info);\n            },\n\n\n            change_link_name()\n            {\n\n                this.info.links[this.link_id].label = this.new_link_name;\n                this.dialogFormVisible_change_link_name = false;\n                this.selectClear();\n                this.btnChangeEnable = true;\n                this.renderGraph(this.info)\n            },\n\n            addLinks()\n            {\n\n                this.dialogFormVisible_link = false;\n\n                if (this.temp.length === 2) {\n                    this.singleClick(this.info, this.selected_Node, this.link_value);\n                }\n\n                this.$message(\n\n                    {\n                        type: 'success',\n                        message: 'Add Links!'\n                    });\n                this.btnChangeEnable = true;\n                this.selectClear()\n\n            },\n\n\n            renderGraph(info) {\n                // let temp = [];\n\n\n                console.log('render data',info);\n                let {links, nodes} = info;\n\n                //关系分组\n                setLinkGroup(links);\n\n                //点击节点后弹出的灰色圆圈以及图标的定义，分为三组【1.删除、2.联系、3.解除位置锁定】\n                let [removePath,remove_rect1,remove_rect2,remove_line1,remove_line2,remove_line3] = [null];\n                let [unlockPath,unlock_path1,unlock_rect1,unlock_line1] = [null];\n                let [hidePath,hide_path1,hide_path2,hide_path3,hide_path4,hide_circle1,hide_line1] = [null];\n                let rightArc = d3.svg.arc().outerRadius(60).innerRadius(30).startAngle(0).endAngle(1.85);\n                let leftArc = d3.svg.arc().outerRadius(60).innerRadius(30).startAngle(4.5).endAngle(6.23);\n                let bottomArc = d3.svg.arc().outerRadius(60).innerRadius(30).startAngle(1.9).endAngle(4.45);\n\n                d3.select(\"#graph\").html('');\n\n\n                let force = d3.layout.force()//layout将json格式转化为力学图可用的格式\n                    .nodes(nodes)//设定节点数组\n                    .links(links)//设定连线数组\n                    .linkDistance(500)//连接线长度\n                    .charge(-1500)//顶点的电荷数。该参数决定是排斥还是吸引，数值越小越互相排斥\n                    .on(\"tick\", function (){\n                            tick()\n                        },\n                    )//指时间间隔，隔一段时间刷新一次画面\n                    .start();//开始转换\n\n\n\n                let zoom = d3.behavior.zoom()\n                    .scaleExtent([.4, 2])\n                    .on(\"zoom\", zoomed);\n\n                let svg = d3.select(\"#graph\").append(\"svg\")\n                    .attr(\"pointer-event\", \"all\")\n                    .attr(\"preserveAspectRatio\", \"xMidYMid meet\")//自适应容器大小\n                    .attr(\"viewBox\", \"-460 -220 1200 1200\")\n                    // .on(\"dblclick\", doubleClick)\n                    .call(zoom);\n\n\n\n\n                // old_nodes = nodes;\n                let circle_g = svg.selectAll(\"circle\")\n                    .data(force.nodes())//表示使用force.nodes数据\n                    .enter()\n                    .append(\"g\")\n                    .attr(\"class\",function(node,i){\n                        return \"g_circle_\" + i; })//标记circle的父节点\n                    .style(\"cursor\",\"pointer\")\n                    .call(drag()) //将当前选中的元素传到drag函数中，使顶点可以被拖动\n                    .on(\"click\", (node, i,) => {\n                        if (d3.event.defaultPrevented) return;\n\n                        // console.log('鼠标单击',this.clickTimeId);\n                        // console.log(d3.select(this))\n                        clearTimeout(this.clickTimeId);\n\n                        this.clickTimeId = setTimeout( ()=> {\n\n                                // console.log(\"鼠标单击\");\n\n                                // this.selected_Node = node;\n                                // this.addLinks()\n                                // console.log('selected_Node',this.selected_Node)\n                                this.temp.push(node.index);\n                                console.log('liuliu',this.temp);\n                                if(this.temp.length === 2 && this.temp[0] !== this.temp[1]){\n                                    this.dialogFormVisible_link = true;\n\n                                }\n                                else if(this.temp.length === 2 && this.temp[0] === this.temp[1])\n                                {\n                                    this.temp.length = 0\n                                }\n                                // this.singleClick(info, node, temp, this.state2);\n                                clickStyle(node, i, this);\n                            }\n                            , 250);\n                    })\n\n                    // .on('mouseover', (node) => {\n                    //     if (d3.event.defaultPrevented) return;\n                    //     // showNodeInfo(node, this);\n                    //     // showCircleBorderOuterArc(node, i);\n                    // })\n                    .on(\"dblclick\", (node, )=>{\n\n\n                        if (d3.event.defaultPrevented) return;\n                        console.log('double click',nodes);\n                        clearTimeout(this.clickTimeId);\n                        console.log('双击',this.clickTimeId);\n                        this.dialogFormVisible = true;\n                        // this.doubleClick(info, node, nodes, links)\n\n\n                    })\n                    .on('contextmenu',(d,node)=>{\n                        console.log('node!!!!!',d,node);\n                        Menu(this.menu)(d, d3.event, node)\n\n                    });\n\n\n\n\n                svg.on(\"dblclick.zoom\", null);//取消svg和圆圈的双击放大事件（d3中默认开启7个事件，关闭防止与上面的双击事件冲突）\n                circle_g.on(\"dblclick.zoom\", null);\n\n\n\n                //单击改变节点颜色 表明选中\n                function clickStyle(node, i, _this){\n\n                    console.log(_this.ifClicked);\n                    // _this.ifClicked = true;\n\n\n                    circle_g.attr('node', function(n) {\n\n                        console.log('click change color',n.id,node.id);\n                        console.log('selected node',n.index,node.index);\n\n                        if(n.index === node.index && _this.ifClicked===false ) {\n                            d3.select('.g_circle_'+ n.index).select('circle').style('fill','red');\n                            // 有问题！！！！！！！\n                            console.log('haha',d3.select('.g_circle_'+ n.index).select('circle'));\n                            _this.ifClicked = true;\n                            console.log('新选的 true',_this.ifClicked);\n\n                        }\n                        else if(n.index === node.index && _this.ifClicked===true )\n                        {\n                            d3.select('.g_circle_'+ n.index).select('circle')\n                                .style('fill', function (node) { return getCircleColor(node);});\n                            _this.ifClicked = false;\n                            console.log('重复选的颜色变回去 false',_this.ifClicked);\n\n                        }\n                        else if(n.index !== node.index) {\n                            console.log('node are different');\n                            d3.select('.g_circle_'+ n.index)\n                                .select('circle')\n                                .style('fill', function (node) { return getCircleColor(node);})\n\n                        }\n                    });\n                }\n\n\n\n\n                //圆圈\n                let circle = circle_g.append(\"circle\")\n                    .style(\"stroke-width\", \"2px\")\n                    .attr(\"r\", 35)//设置圆圈半径\n                    .style(\"fill\", function (node) { return getCircleColor(node); });\n\n                let text = circle_g.append(\"text\")\n                    .attr(\"dy\", \".35em\")\n                    .attr(\"text-anchor\", \"middle\")//在圆圈中加上数据\n                    .style('fill', \"#FFFFFF\")\n                    .attr('x',function(d){ appendCircleText(d, this); });\n\n                //圆圈的提示文字\n                circle.append(\"svg:title\").text(function(node) {\n                    switch (node.type) {\n                        case 'node': return node.properties.name;\n                        // case 'Device': return node.factoryCode;\n                        // case 'Application': return node.applicationName;\n                        // case 'Position': return node.positionCode;\n                        // case 'Manufacturer': return node.manufacturerName;\n                        // case 'IotInfrastructure': return node.iotInfrastructureName;\n                        // case 'DeviceAdmin': return node.name;\n                    }\n                });\n                text.append(\"svg:title\").text(function(node) {\n                    switch (node.type) {\n                        case 'node': return node.properties.name;\n                        // case 'Device': return node.factoryCode;\n                        // case 'Application': return node.applicationName;\n                        // case 'Position': return node.positionCode;\n                        // case 'Manufacturer': return node.manufacturerName;\n                        // case 'IotInfrastructure': return node.iotInfrastructureName;\n                        // case 'DeviceAdmin': return node.name;\n                    }\n                });\n                //设置连接线\n                const edges_line = svg.append(\"g\").selectAll(\".edgepath\")\n                    .data(force.links())\n                    .enter()\n                    .append(\"path\")\n                    .attr(\"marker-end\",  function (d, i) { return getMarkerArrow(i); })//根据箭头标记的id号标记箭头\n                    .style(\"stroke\", '#9aaabf')\n                    .style(\"stroke-width\", 4)//线条粗细\n                    .style(\"fill-opacity\",0)\n                    .style(\"cursor\",\"pointer\")\n                    .attr(\"id\", function (d, i) { return 'edgepath' + i; })\n                    .on(\"mouseover\", function(d){ return getStrokeWidth(d); })\n                    .on(\"mouseout\", function() { edges_line.style(\"stroke-width\", 3) })\n                    // .on('click', (link) => { this.deleteLine(this.info,link); })\n                    .on('contextmenu',(d,link)=>{\n                        console.log(d);\n                        console.log('link!!!',link)\n                        Menu(this.menu_edge)(d,d3.event,link)\n\n                    });\n\n                const edges_text = svg.append(\"g\").selectAll(\".edgetext\")\n                    .data(links)\n                    .enter()\n                    .append(\"text\")\n                    .style(\"pointer-events\", \"none\")\n                    .attr(\"class\",\"linetext\")\n                    .attr('text-anchor', \"middle\")\n                    .attr(\"fill-opacity\", 1)\n                    .style(\"cursor\",\"pointer\")\n                    .attr({'class': 'edgelabel', 'id': function (d, i) { return 'edgepath' + i; }, 'dx': 150, 'dy': 20, 'fill':'#9aaabf'});\n\n                //设置线条上的文字\n                edges_text.append('textPath')\n                    .attr('xlink:href', function (d, i) { return '#edgepath' + i })\n                    .attr(\"pointer-events\", \"none\").attr(\"font-size\", 15)\n                    .text(function (d) { return d.label; });\n\n\n                // force.on(\"tick\", tick)//指时间间隔，隔一段时间刷新一次画面\n                //     .start();//开始转换\n                function zoomed() {//svg下的g标签移动大小\n                    svg.selectAll(\"g\").attr(\"transform\", \"translate(\"  +d3.event.translate + \")scale(\" +d3.event.scale + \")\");\n                }\n\n                function getMarkerArrow(i) {\n                    svg.append(\"defs\").append(\"marker\")   //箭头\n                        .attr(\"id\", \"arrow\"+i)\n                        .attr(\"markerUnits\",\"strokeWidth\")//设置为strokeWidth箭头会随着线的粗细发生变化\n                        .attr(\"markerUnits\", \"userSpaceOnUse\")\n                        .attr(\"markerWidth\", 10)//标识的大小\n                        .attr(\"markerHeight\", 10)\n                        .attr(\"viewBox\", \"0 -4 12 15\")//坐标系的区域\n                        .attr(\"refX\", 0)//箭头坐标\n                        .attr(\"refY\", 0)\n                        .attr(\"orient\", 'auto')//绘制方向，可设定为：auto（自动确认方向）和 角度值\n                        .append(\"svg:path\")\n                        .attr(\"stroke-width\",1)//箭头宽度\n                        .attr(\"d\", \"M0,-5L10,0L0,5\")//箭头的路径\n                        .attr('fill', 'rgba(0,0,0, 0.4)');//箭头颜色\n                    return \"url(#arrow\" + i + \")\";\n                }\n\n                function getStrokeWidth(d) {\n                    edges_line.style(\"stroke-width\", function (edge) {\n                        // return edge.relation.relationshipId === d.relation.relationshipId ? 3 : 1;\n                        return 6\n                    });\n                }\n\n                function drag(){//拖拽函数\n                    return force.drag().on(\"dragstart\",function(d){\n                        d3.event.sourceEvent.stopPropagation(); //取消默认事件\n                        d.fixed = true;//拖拽开始后设定被拖拽对象为固定\n                    });\n                }\n\n                function circleClick(node, i, _this) {\n                    //获取当前节点是否包含圆环\n                    let existedRing = svg.select('.g_circle_' + i).selectAll('.g_circle_path');\n                    //清除上个节点的圆圈以及图标\n                    svg.selectAll('.g_circle_path').remove();\n                    svg.selectAll('.remove_a').remove();\n                    svg.selectAll('.hide_a').remove();\n                    svg.selectAll('.unlock_a').remove();\n                    if(existedRing && existedRing[0].length === 0) {\n                        //showCircleBorderOuterArc(node, i);\n                        //绘制灰色可点击圆圈，分为三部分分别绘制\n                        showRemove(node, i, _this);\n                        showUnlock(node, i, _this);\n                        showHide(node,i, _this);\n                    }\n                }\n\n                function getCircleColor(node) {\n                    let color = {\n                        'Device': \"#FF9D00\",\n                        'Position': \"#C477E9\",\n                        'Work': '#67CAF4',\n                        'Install': '#BCDD73',\n                        'Application': '#DD1E9E',\n                        'Manufacturer': '#DDBA9E',\n                        'IotInfrastructure': '#6ca5dd',\n                        'DeviceAdmin': '#50DD87',\n                    };//圆圈背景色\n                    return color[node.label] || '#C477E9';\n                }\n\n                function appendCircleText(d, _this) {\n                    let circleText = '';\n                    if(d.type === 'node' && d.properties.name) {\n                        circleText = d.properties.name;\n                    } else if(d.label === 'Position') {\n                        circleText = d.positionCode;\n                    } else if (d.label === 'Application') {\n                        circleText = d.applicationName;\n                    } else if (d.label === 'Manufacturer') {\n                        circleText = d.manufacturerName;\n                    } else if (d.label === 'IotInfrastructure') {\n                        circleText = d.iotInfrastructureName;\n                    } else if (d.label === 'DeviceAdmin') {\n                        circleText = d.name;\n                    }\n                    //如果小于四个字符，不换行\n                    if(circleText && circleText.length > 8){\n                        circleText = circleText.substring(0,8) + \"...\";\n                        d3.select(_this).text(function(){return '';});\n                    }\n                    d3.select(_this).append('tspan').attr('x',0).attr('y',0).attr(\"font-size\", 18)\n                        .text(function(){ return circleText; });\n                }\n\n\n\n\n                function tick() {\n\n                    circle.attr(\"transform\", transform1);//圆圈\n                    text.attr(\"transform\", transform2);//顶点文字\n                    edges_line.attr('d', function (d) {\n                        //绘制自己指向自己的路径\n                        // if(d.relation.isSelf) { return getNodeSelfPath(d) }\n                        //绘制两个节点之间的路径\n                        return getNodesLine(d);//曲线路径\n                    });\n\n                    // if(circleBorderOuterArcObj !== null) {\n                    //   circleBorderOuterArcObj.attr(\"transform\", function (d){ return \"translate(\"+d.x+\",\"+d.y+\")\" });\n                    // }\n\n                    //绘制节点删除功能半圆环\n                    if(removePath !== null) {\n                        removePath.attr(\"transform\", function (d){ return \"translate(\"+d.x+\",\"+d.y+\")\" });\n\n                        let r1 = null;\n                        remove_rect1.attr('d',function(d) { r1 = d; })\n                            .attr(\"x\",r1.x + 33 + 6.75).attr(\"y\",r1.y  - 36 + 9.75).attr(\"width\",5).attr(\"height\",3).attr(\"rx\",1.5).attr(\"ry\",1.5);\n\n                        let r2 = null;\n                        remove_rect2.attr('d',function(d) { r2 = d; })\n                            .attr(\"x\",r2.x + 30 + 6.75).attr(\"y\",r2.y  - 33 + 9.75).attr(\"width\",12).attr(\"height\",14).attr(\"rx\",1.5).attr(\"ry\",1.5);\n\n                        let l1 = null;\n                        remove_line1.attr('d',function(d) { l1 = d; })\n                            .attr(\"x1\",l1.x + 28 + 6.75).attr(\"y1\",l1.y - 33 + 9.75).attr(\"x2\",l1.x + 45 + 6.75).attr(\"y2\",l1.y - 33 + 9.75);\n\n                        let l2 = null;\n                        remove_line2.attr('d',function(d) { l2 = d; })\n                            .attr(\"x1\",l2.x + 34 + 6.75).attr(\"y1\",l2.y - 30 + 9.75).attr(\"x2\",l2.x + 34 + 6.75).attr(\"y2\",l2.y - 23 + 9.75);\n\n                        let l3 = null;\n                        remove_line3.attr('d',function(d) { l3 = d; })\n                            .attr(\"x1\",l3.x + 38 + 6.75).attr(\"y1\",l3.y - 30 + 9.75).attr(\"x2\",l3.x + 38 + 6.75).attr(\"y2\",l3.y - 23 + 9.75);\n                    }\n\n                    //绘制解除节点位置锁定半圆环\n                    if(unlockPath !== null) {\n                        unlockPath.attr(\"transform\", function (d){ return \"translate(\"+d.x+\",\"+d.y+\")\" });\n                        unlock_path1.attr(\"transform\", function (d){ return \"translate(\"+ (d.x - 45) +\",\"+ (d.y - 23) +\")\" });\n\n                        let r1 = null;\n                        unlock_rect1.attr('d',function(d) { r1 = d; })\n                            .attr(\"x\",r1.x  - 52 + 6.75).attr(\"y\",r1.y - 30 + 9.75).attr(\"width\",15).attr(\"height\",12).attr(\"rx\",1.5).attr(\"ry\",1.5);\n\n                        let l1 = null;\n                        unlock_line1.attr('d',function(d) { l1 = d; })\n                            .attr(\"x1\",l1.x  - 52 + 15).attr(\"y1\",l1.y  - 30 + 15).attr(\"x2\",l1.x  - 52 +15).attr(\"y2\",l1.y  - 30 + 18);\n                    }\n\n                    //绘制隐藏节点和关系半圆环\n                    if(hidePath !== null) {\n                        hidePath.attr(\"transform\", function (d){ return \"translate(\"+d.x+\",\"+d.y+\")\" });\n\n                        hide_path1\n                            .attr(\"d\", function(d) {\n                                return \"M\" + (d.x - 13) + \",\" + (d.y + 42) + \"A15,15,0,0,1\" + (d.x + 13) + \",\" + (d.y + 42)\n                            });\n                        hide_path2\n                            .attr(\"d\", function(d) {\n                                return \"M\"+ (d.x - 12 + 10.4) + \",\" + (d.y + 34 + 10.937) + \"A\" + 3.749 + \",\" + 3.749 + \",0,1,1,\" + (d.x - 12 + 15.338) + \",\" + (d.y + 33 + 9)\n                            });\n                        hide_path3\n                            .attr(\"d\", function(d) {\n                                return \"M\" + (d.x - 12) + \",\" + (d.y + 42) + \"A20,20,0,0,0\" + (d.x - 4) + \",\" + (d.y + 47)\n                            });\n                        hide_path4\n                            .attr(\"d\", function(d) {\n                                return \"M\" + (d.x + 11) + \",\" + (d.y + 44) + \"A20,20,0,0,0\" + (d.x + 13) + \",\" + (d.y + 42)\n                            });\n\n                        let c1 = null;\n                        hide_circle1.attr('d',function(d) { c1 = d; })\n                            .attr(\"cx\",c1.x - 12 + 17.15).attr(\"cy\",c1.y + 33 + 17.25).attr(\"r\",6);\n\n                        let l1 = null;\n                        hide_line1.attr('d',function(d) { l1 = d; })\n                            .attr(\"x1\",l1.x - 12 + 14.15).attr(\"y1\",l1.y + 33 + 17.25).attr(\"x2\",l1.x - 12 + 20.15).attr(\"y2\",l1.y + 33 + 17.25);\n\n                    }\n\n                }\n\n                //设置圆圈和文字的坐标\n                function transform1(d) {\n                    return \"translate(\" + d.x + \",\" + d.y + \")\";\n                }\n\n                function transform2(d) {\n                    return \"translate(\" + (d.x) + \",\" + d.y + \")\";\n                }\n                function showRemove(node, i, _this) {\n                    removePath = d3.select('.g_circle_'+ i).append(\"path\").attr('class', 'g_circle_path')\n                        .attr(\"transform\", \"translate(\" + node.x + \",\" + node.y + \")\").attr(\"d\", rightArc)\n                        .attr(\"fill\", \"rgb(210, 213, 218)\")\n                        .style(\"cursor\",\"pointer\")\n                        // .on(\"click\", () => { removeNodeAndPath(node, _this); })\n                        .on(\"mouseover\", function(){ removePath.attr(\"fill\", \"rgb(185, 185, 185)\") })\n                        .on(\"mouseout\", function() { removePath.attr(\"fill\", \"rgb(210, 213, 218)\") });\n\n                    d3.select('.g_circle_'+ i).append(\"g\").attr(\"class\",\"remove_a\")\n                        .attr(\"transform\", \"translate(\" + (node.x + 33) + \",\" + (node.y - 24) + \") scale(0.7)\")\n                        .append(\"defs\").append(\"style\")\n                        .text(\".remove_a{fill:none;stroke:#FFFFFF;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px;}\");\n\n                    removePath.append(\"title\").attr(\"class\",\"remove_a\").text(\"Remove\");\n                    remove_rect1 = d3.select('.g_circle_'+ i).append(\"rect\").attr(\"class\",\"remove_a\").attr(\"x\",node.x + 33 + 6.75).attr(\"y\",node.y  - 36 + 9.75)\n                        .attr(\"width\",5).attr(\"height\",3).attr(\"rx\",1.5).attr(\"ry\",1.5);\n                    remove_rect2 = d3.select('.g_circle_'+ i).append(\"rect\").attr(\"class\",\"remove_a\").attr(\"x\",node.x + 30 + 6.75).attr(\"y\",node.y  - 33 + 9.75)\n                        .attr(\"width\",12).attr(\"height\",14).attr(\"rx\",1.5).attr(\"ry\",1.5);\n                    remove_line1 = d3.select('.g_circle_'+ i).append(\"line\").attr(\"class\",\"remove_a\").attr(\"x1\",node.x + 28 + 6.75).attr(\"y1\",node.y - 33 + 9.75).attr(\"x2\",node.x + 45 + 6.75).attr(\"y2\",node.y - 33 + 9.75);\n                    remove_line2 = d3.select('.g_circle_'+ i).append(\"line\").attr(\"class\",\"remove_a\").attr(\"x1\",node.x + 34 + 6.75).attr(\"y1\",node.y - 30 + 9.75).attr(\"x2\",node.x + 34 + 6.75).attr(\"y2\",node.y - 23 + 9.75);\n                    remove_line3 = d3.select('.g_circle_'+ i).append(\"line\").attr(\"class\",\"remove_a\").attr(\"x1\",node.x + 38 + 6.75).attr(\"y1\",node.y - 30 + 9.75).attr(\"x2\",node.x + 38 + 6.75).attr(\"y2\",node.y - 23 + 9.75);\n\n                    // d3.selectAll(\".remove_a\").on(\"click\", () => { removeNodeAndPath(node, _this); })\n                }\n\n                function showHide(node,i) {\n                    hidePath = d3.select('.g_circle_'+ i).append(\"path\").attr('class', 'g_circle_path')\n                        .attr(\"transform\", \"translate(\" + node.x + \",\" + node.y + \")\").attr(\"d\", bottomArc)\n                        .attr(\"fill\", \"rgb(210, 213, 218)\")\n                        .style(\"cursor\",\"pointer\")\n                        // .on(\"click\", function(){ hideNodeAndLinks(node) })\n                        .on(\"mouseover\", function(){ hidePath.attr(\"fill\", \"rgb(185, 185, 185)\") })\n                        .on(\"mouseout\", function() { hidePath.attr(\"fill\", \"rgb(210, 213, 218)\") });\n\n                    d3.select('.g_circle_'+ i).append(\"g\").attr(\"class\",\"hide_a\")\n                        .attr(\"transform\", \"translate(\" + (node.x - 8) + \",\" + (node.y + 38) + \") scale(0.7)\")\n                        .append(\"defs\").append(\"style\")\n                        .text(\".hide_a{fill:none;stroke:#FFFFFF;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px;}\");\n\n                    hidePath.append(\"title\").attr(\"class\",\"hide_a\").text(\"Hide\");\n\n                    hide_path1 = d3.select('.g_circle_'+ i).append(\"path\").attr(\"class\",\"hide_a\")\n                        .attr(\"d\", function(d) {\n                            return \"M\" + (d.x - 13) + \",\" + (d.y + 42) + \"A15,15,0,0,1\" + (d.x + 13) + \",\" + (d.y + 42)\n                        });\n                    hide_path2 = d3.select('.g_circle_'+ i).append(\"path\").attr(\"class\",\"hide_a\")\n                        .attr(\"d\", function(d) {\n                            return \"M\"+ (d.x - 12 + 10.4) + \",\" + (d.y + 34 + 10.937) + \"A\" + 3.749 + \",\" +  3.749 + \",0,1,1,\" + (d.x - 12 + 15.338) + \",\" + (d.y + 33 + 9)\n                        });\n                    hide_path3 = d3.select('.g_circle_'+ i).append(\"path\").attr(\"class\",\"hide_a\")\n                        .attr(\"d\", function(d) {\n                            return \"M\" + (d.x - 12) + \",\" + (d.y + 42) + \"A20,20,0,0,0\" + (d.x - 4) + \",\" + (d.y + 47)\n                        });\n                    hide_path4 = d3.select('.g_circle_'+ i).append(\"path\").attr(\"class\",\"hide_a\")\n                        .attr(\"d\", function(d) {\n                            return \"M\" + (d.x + 11) + \",\" + (d.y + 44) + \"A20,20,0,0,0\" + (d.x + 13) + \",\" + (d.y + 42)\n                        });\n                    hide_circle1 = d3.select('.g_circle_'+ i).append(\"circle\").attr(\"class\",\"hide_a\").attr(\"cx\",node.x - 12 + 17.15).attr(\"cy\",node.y + 33 + 17.25).attr(\"r\",6);\n                    hide_line1 = d3.select('.g_circle_'+ i).append(\"line\").attr(\"class\",\"hide_a\").attr(\"x1\",node.x - 12 + 14.15).attr(\"y1\",node.y + 33 + 17.25).attr(\"x2\",node.x - 12 + 20.15).attr(\"y2\",node.y + 33 + 17.25);\n\n                    // d3.selectAll(\".hide_a\").on(\"click\", (d) => { hideNodeAndLinks(d); })\n                }\n                function showUnlock(node, i) {\n                    unlockPath = d3.select('.g_circle_'+ i).append(\"path\").attr('class', 'g_circle_path')\n                        .attr(\"transform\", \"translate(\" + node.x + \",\" + node.y + \")\").attr(\"d\", leftArc)\n                        .attr(\"fill\", \"rgb(210, 213, 218)\").style(\"cursor\",\"pointer\")\n                        // .on(\"click\", function(d){ unlockNodeFixed(d); })\n                        .on(\"mouseover\", function(){ unlockPath.attr(\"fill\", \"rgb(185, 185, 185)\") })\n                        .on(\"mouseout\", function() { unlockPath.attr(\"fill\", \"rgb(210, 213, 218)\") });\n\n                    d3.select('.g_circle_'+ i).append(\"g\").attr(\"class\",\"unlock_a\")\n                        .attr(\"transform\", \"translate(\" + (node.x - 52) + \",\" + (node.y - 30) + \") scale(0.7)\")\n                        .append(\"defs\").append(\"style\")\n                        .text(\".unlock_a{fill:none;stroke:#FFFFFF;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px;}\");\n\n                    unlockPath.append(\"title\").attr(\"class\",\"unlock_a\").text(\"Unlock\");\n                    unlock_path1 = d3.select('.g_circle_'+ i).append(\"path\").attr(\"class\",\"unlock_a\")\n                        .attr(\"transform\", \"translate(\" + (node.x - 45) + \",\" + (node.y - 23) + \")\")\n                        .attr(\"d\", d3.svg.arc().outerRadius(5.3).innerRadius(5).startAngle(-1.8).endAngle(1.8))\n                        .attr(\"fill\", \"#FFFFFF\");\n\n                    unlock_rect1 = d3.select('.g_circle_'+ i).append(\"rect\").attr(\"class\",\"unlock_a\").attr(\"x\",node.x - 52 + 6.75).attr(\"y\",node.y  - 30 + 9.75)\n                        .attr(\"width\",15).attr(\"height\",12).attr(\"rx\",1.5).attr(\"ry\",1.5);\n                    unlock_line1 = d3.select('.g_circle_'+ i).append(\"line\").attr(\"class\",\"unlock_a\").attr(\"x1\",node.x  - 52 + 15).attr(\"y1\",node.y - 30 + 15).attr(\"x2\",node.x  - 52 + 15).attr(\"y2\",node.y - 30 + 18);\n\n                    // d3.selectAll(\".unlock_a\").on(\"click\", (d) => { unlockNodeFixed(d); })\n\n                }\n                function hideNodeAndLinks(node) {\n                    d3.event.stopPropagation();\n                    circle_g.attr('node', function(n) {\n                        if(n.id === node.id) {\n                            d3.select(this).remove();\n                        }\n                    });\n                    edges_line.attr('d', function(d) {\n                        if(d.source.id === node.id || d.target.id === node.id) {\n                            d3.select(this).remove();\n                        }\n                    });\n                }\n                function removeNodeAndPath(node, _this){\n                    d3.event.stopPropagation();\n                    alert('delete this '+ node + ',' + _this );\n                }\n                // function showNodeInfo(node, _this) {\n                //     window.console.log(node);\n                //     window.console.log(_this);\n                //\n                // }\n                function unlockNodeFixed(d) {\n                    d3.event.stopPropagation();\n                    d3.select(this).classed(\"fixed\", d.fixed = false);//解除节点位置锁定\n                    //清除上个节点的圆圈以及图标\n                    svg.selectAll('.g_circle_path').remove();\n                    svg.selectAll('.remove_a').remove();\n                    svg.selectAll('.hide_a').remove();\n                    svg.selectAll('.unlock_a').remove();\n                }\n\n                function Menu (menu, openCallback) {\n\n                    d3.event.preventDefault();\n\n                    d3.selectAll('.d3-context-menu').data([1])\n                        .enter()\n                        .append('div')\n                        .attr('class', 'd3-context-menu')\n\n                    // close menu\n                    d3.select('body').on('click.d3-context-menu', function () {\n                        d3.select('.d3-context-menu').style('display', 'none')\n                    });\n\n                    return (select, event, data)=> {\n\n\n                        console.log(select.type);\n                        console.log('select',data);\n                        let elm = this;\n\n\n                        d3.selectAll('.d3-context-menu').html('');\n                        let list = d3.selectAll('.d3-context-menu').append('ul');\n\n                        list.selectAll('li').data(menu).enter()\n                            .append('li')\n                            .html(function (d) {\n                                return d.title\n                            })\n                            .on('click', function (d) {\n\n\n                                d.action(data, select);\n\n                                d3.select('.d3-context-menu').style('display', 'none')\n                            });\n\n                        // the openCallback allows an action to fire before the menu is displayed\n                        // an example usage would be closing a tooltip\n                        if (openCallback) openCallback(data);\n\n                        // display context menu\n\n                        d3.select('.d3-context-menu')\n                            .style('left', (event.pageX - 2) + 'px')\n                            .style('top', (event.pageY - 2) + 'px')\n                            .style('display', 'block');\n                        d3.event.preventDefault();\n                        // return false\n                    }\n\n                }\n\n\n            },\n\n            doubleClick(info,nodes, input){\n\n\n                let new_node = {\n                    'id': nodes.length,\n                    \"type\": \"node\",\n                    'properties': {'name': input}\n                };\n\n                console.log('6. add node');\n                info.nodes.push(new_node);\n                this.renderGraph(info);\n\n                // this.$prompt(\n                //     'Please input node name：',\n                //     'Tips',\n                //     {\n                //         confirmButtonText: 'Yes',\n                //         cancelButtonText: 'No',\n                //         inputValue: 'New Node',\n                //         inputErrorMessage: 'Input cannot be none',\n                //         inputValidator: (value) => {       // 点击按钮时，对文本框里面的值进行验证\n                //             if(!value) {\n                //                 return 'Input cannot be none';\n                //             }\n                //         },\n                //\n                //     }).then(({value}) => {\n                //\n                //         let new_node = {\n                //             'id': nodes.length,\n                //             \"type\": \"node\",\n                //             'properties': {'name': value}\n                //         };\n                //\n                //         console.log('6. add node');\n                //         info.nodes.push(new_node);\n                //         this.renderGraph(info);\n                //\n                // }).catch((err) => {\n                //     console.log(err);\n                // });\n\n            },\n\n            singleClick(info, node,input){\n                // let temp = [];\n                console.log('single click!');\n                console.log('node id', node);\n                // let source = node.id;\n\n\n                if(this.temp.length ===2 && this.temp[0] !== this.temp[1] )\n                {\n\n                    // this.$prompt(\"Add links?\", \"Tips\", {\n                    //     confirmButtonText: \"Yes\",\n                    //     cancelButtonText: \"No\",\n                    //     inputValue: 'New Link',\n                    //     inputErrorMessage: 'Input cannot be none',\n                    //     inputValidator: (value) => {       // 点击按钮时，对文本框里面的值进行验证\n                    //         if(!value) {\n                    //             return 'Input cannot be none';\n                    //         }\n                    //     },\n                    //\n                    // }).then(({value}) => {\n                    //     this.$message(\n                    //\n                    //         {\n                    //         type: 'success',\n                    //         message: 'Add Links!'\n                    //     });\n                    //     console.log('new link added',info.links);\n\n                    let new_link = {\n                        \"source\": this.temp[0],\n                        \"target\": this.temp[1],\n                        \"type\": 'link',\n                        \"properties\": {},\n                        \"label\": input\n\n                    };\n\n                    info.links.push(new_link);\n                    console.log('new link added', info.links);\n                    this.temp.length = 0;\n                    this.renderGraph(info)\n\n                    // }).catch(() => {\n                    //     temp.length = 0;\n                    //     this.$message({\n                    //         type: 'info',\n                    //         message: 'Cancel!'\n                    //     })\n                    // });\n                }\n                else if(this.temp.length ===2 && this.temp[0] === this.temp[1] )\n                {\n                    this.temp.length = 0;\n                }\n\n                if (this.temp.length ===0){\n                    this.renderGraph(info)\n                }\n\n                console.log('current select node id',this.temp)\n\n\n            },\n\n\n            submitData(){\n                console.log('submit data',this.info);\n                alert('Submit Successfully!')\n            },\n\n            reload(){\n                this.renderGraph(this.info)\n            },\n\n            deleteNodes(node,info){\n                console.log('select delete node',node)\n            },\n\n\n\n\n            removeNodeClick(){\n\n                console.log('remove node')\n\n            },\n\n\n\n\n\n\n\n\n        }\n\n\n    }\n</script>\n\n<style>\n    #graph {\n        width: 100vw;\n        height: 100vh;\n    }\n\n    .d3-context-menu {\n        position: absolute;\n        display: none;\n        background-color: #f2f2f2;\n        border-radius: 4px;\n\n        font-family: Arial, sans-serif;\n        font-size: 14px;\n        min-width: 150px;\n        border: 1px solid #d4d4d4;\n\n        z-index:1200;\n    }\n\n    .d3-context-menu ul {\n        list-style-type: none;\n        margin: 4px 0px;\n        padding: 0px;\n        cursor: default;\n    }\n\n    .d3-context-menu ul li {\n        padding: 4px 16px;\n    }\n\n    .d3-context-menu ul li:hover {\n        background-color: #4677f8;\n        color: #fefefe;\n    }\n\n\n</style>\n\n"]}]}