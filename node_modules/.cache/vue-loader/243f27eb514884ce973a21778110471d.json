{"remainingRequest":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/songqingyu/Documents/GitHub/sustainKG/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/src/App.vue","mtime":1627454648473},{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songqingyu/Documents/GitHub/sustainKG/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}