



function doubleClick(node,nodes)
{


window.console.log(node.id);
window.console.log(nodes.length);

const new_node = {'id':nodes.length,
'factoryCode':'None',
'label':'Device',
'linkId':0};


const new_link = {
"source": node.id,
"target": nodes.length,
"relation": {
"relationshipId": 200,
"relationship": "link test",
"created": 1574822650825,
"lineNumber": null,
"isSelf": false
}
};
// window.console.log(new_node);
nodes.push(new_node);
links.push(new_link);

// let new_force = d3.layout.force()//layout将json格式转化为力学图可用的格式
//     .nodes(nodes)//设定节点数组
//     .links(links)//设定连线数组
//     .linkDistance(150)//连接线长度
//     .charge(-1500)//顶点的电荷数。该参数决定是排斥还是吸引，数值越小越互相排斥
//     .on("tick", tick)//指时间间隔，隔一段时间刷新一次画面
//     .start();//开始转换
// console.log('force node',force.nodes());
// console.log('force link',force.links());
//
// // let zoom = d3.behavior.zoom()
// //     .scaleExtent([.4, 2])
// //     .on("zoom", zoomed);
//
// // let svg = d3.select("#graph").append("svg")
// //     .attr("pointer-event", "all")
// //     .attr("preserveAspectRatio", "xMidYMid meet")//自适应容器大小
// //     .attr("viewBox", "0 0 1000 1000")
// //     // .on("dblclick", doubleClick)
// //     .call(zoom);
//
// let new_circle_g =svg.selectAll("circle")
//     .data(new_force.nodes())//表示使用force.nodes数据
//     .enter()
//     .append("g")
//     .attr("class",function(node,i){
//         console.log('new circle',node,i);
//         return "g_circle_" + i;
//     })//标记circle的父节点
//     .style("cursor","pointer")
//     .call(drag()) //将当前选中的元素传到drag函数中，使顶点可以被拖动
//     // .on("click", (node, i) => {
//     //     if (d3.event.defaultPrevented) return;//阻止click事件和拖拽事件冲突
//     //     circleClick(node, i, this);
//     // })
//
//     .on("dblclick", (node)=>{
//         console.log('double click',nodes)
//         doubleClick(node,nodes)
//     });
//
// const new_circle = new_circle_g.append("circle")
//     .style("stroke-width", "2px")
//     .attr("r", 25)//设置圆圈半径
//     .style("fill", function (node) { return getCircleColor(node); });
//
// new_circle.append("svg:title").text(function(node) {
//     switch (node.label) {
//         case 'Device': return node.factoryCode;
//     }
// });
// let new_text = new_circle_g.append("text")
//     .attr("dy", ".35em")
//     .attr("text-anchor", "middle")//在圆圈中加上数据
//     .style('fill', "#FFFFFF")
//     .attr('x',function(d){ appendCircleText(d, this); });
// new_text.append("svg:title").text(function(node) {
//     switch (node.label) {
//         case 'Device': return node.factoryCode;
//
//     }
// });

// function drag(){//拖拽函数
//     return new_force.drag().on("dragstart",function(d){
//         d3.event.sourceEvent.stopPropagation(); //取消默认事件
//         d.fixed = false;//拖拽开始后设定被拖拽对象为固定
//     });
// }